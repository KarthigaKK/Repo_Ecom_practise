package StepDefinition;

import static org.testng.Assert.assertTrue;

import java.util.Iterator;
import java.util.Set;

import org.junit.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;//Selenium java
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;////Selenium java

import Utilities.TestContextSetup;
import io.cucumber.java.en.Given;//cucumber-java
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import io.github.bonigarcia.wdm.WebDriverManager;//webdrivermanager

public class LandingPageStepDefinition {

	WebDriver driver;
	String offerPageItem;
	String landingPageItem;
	TestContextSetup testContextSetup;
	
	public LandingPageStepDefinition(TestContextSetup testContextSetup)
	{
		this.testContextSetup=testContextSetup;//this refer to current class variable
	}

	@Given("User is on Greencart landing page")
	public void user_is_on_greencart_landing_page() {
		// Set up the wWebDriverManager for chrome driver
		WebDriverManager.chromedriver().setup();
		// Create the driver object
		driver = new ChromeDriver();
		driver.get("https://rahulshettyacademy.com/seleniumPractise/#/");
		Assert.assertEquals(driver.getTitle(), "GreenKart - veg and fruits kart");

	}

	@When("User searched with short name {string} and extracted actual name of product")
	public void user_searched_with_short_name_and_extracted_actual_name_of_product(String item) throws InterruptedException {
		driver.findElement(By.xpath("//input[@placeholder='Search for Vegetables and Fruits']")).sendKeys(item);
		driver.findElement(By.xpath("//button[@type='submit']")).click();
		Thread.sleep(7000);
		landingPageItem = driver.findElement(By.cssSelector("h4.product-name")).getText().split("-")[0].trim();

		System.out.println("Product name extracted from home page:" + landingPageItem);

		WebElement itemPresent = driver.findElement(By.xpath("//img[@alt='Tomato - 1 Kg']"));

		Boolean itemDisplayed = itemPresent.isDisplayed();
		if (itemDisplayed) {
			Assert.assertTrue(true);
		} else
			Assert.assertTrue(false);
	}



}
